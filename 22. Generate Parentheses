class Solution {
    List<String> ans;

    public List<String> generateParenthesis(int n) {
        ans = new ArrayList<>();

        formParenthesis(n, n, new StringBuilder());

        return ans;
    }

    private void formParenthesis(int left, int right, StringBuilder sb) {
        if(left == 0 && right == 0) {
            ans.add(sb.toString());
            return;
        }
        
        if(left > 0) {
            sb.append('(');
            formParenthesis(left-1, right, sb);
            sb.deleteCharAt(sb.length()-1);
        }

        if(right > left) {
            sb.append(')');
            formParenthesis(left, right-1, sb);
            sb.deleteCharAt(sb.length()-1);
        }
    }
}
